{"version":3,"sources":["Header.js","Counter.js","AddCounter.js","Counter1.js","Counter2.js","Counter3.js","App.js","reportWebVitals.js","index.js"],"names":["Header","class","href","Component","Counter","props","state","counter","this","setState","className","onClick","OnIncrement","bind","OnDecrement","AddCounter","isClicked","counterAmount","CounterArr","i","push","CreateCounter","Counter1","increment","count","Counter2","Counter3","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mVAeeA,G,6KATP,OACI,qBAAKC,MAAM,SAAX,SACA,6BAAI,mBAAGC,KAAK,WAAR,iD,GANKC,cC+BNC,G,wDA9BX,WAAYC,GAAO,IAAD,8BACd,cAAMA,IACDC,MAAQ,CACTC,QAAU,GAHA,E,0DAQdC,KAAKC,SAAS,CACVF,QAAUC,KAAKF,MAAMC,QAAU,M,oCAKnCC,KAAKC,SAAS,CACVF,QAAUC,KAAKF,MAAMC,QAAU,M,+BAKnC,OACI,sBAAKG,UAAU,cAAf,UACI,6BAAKF,KAAKF,MAAMC,UAChB,wBAAQN,MAAM,OAAMU,QAASH,KAAKI,YAAYC,KAAKL,MAAnD,eACA,wBAAQP,MAAM,OAAMU,QAASH,KAAKM,YAAYD,KAAKL,MAAnD,sB,GAzBML,cC0CPY,G,wDArCd,WAAYV,GAAQ,IAAD,8BACZ,cAAMA,IACDC,MAAQ,CACTU,WAAW,EACXC,cAAe,GAJP,E,4DASZT,KAAKC,SAAS,CACVO,WAAW,EACXC,cAAeT,KAAKF,MAAMW,cAAgB,M,+BAM9C,IAFA,IAAMC,EAAa,GAEVC,EAAI,EAAGA,EAAIX,KAAKF,MAAMW,cAAeE,GAAK,EAC/CD,EAAWE,KAAK,cAAC,EAAD,GAAcD,IAGlC,OACI,sBAAKT,UAAU,aAAf,UACI,iCACI,wBAAQT,MAAM,OAAMU,QAASH,KAAKa,cAAcR,KAAKL,MAArD,6BAEJ,iCACKU,W,GA7BIf,cCqBVmB,G,wDAvBX,WAAYjB,GAAO,IAAD,8BACd,cAAMA,IAMVkB,UAAY,WACT,EAAKd,SAAS,CACVe,MAAO,EAAKlB,MAAMkB,MAAQ,KAP7B,EAAKlB,MAAO,CACRkB,MAAO,GAHG,E,qDAcd,OACE,sBAAKd,UAAU,OAAf,UACE,oBAAGT,MAAM,KAAT,uCAAyCO,KAAKF,MAAMkB,SACpD,wBAAQvB,MAAM,OAAOU,QAASH,KAAKe,UAAnC,wB,GAlBWpB,cCuBRsB,G,wDAtBX,WAAYpB,GAAO,IAAD,8BACd,cAAMA,IAMVkB,UAAY,WACT,EAAKd,SAAS,CACVe,MAAO,EAAKlB,MAAMkB,MAAQ,KAP7B,EAAKlB,MAAO,CACRkB,MAAO,GAHG,E,qDAad,OACE,sBAAKd,UAAU,OAAf,UACE,oBAAGT,MAAM,KAAT,uCAAyCO,KAAKF,MAAMkB,SACpD,wBAAQvB,MAAM,OAAOU,QAASH,KAAKe,UAAnC,wB,GAjBWpB,cCwBRuB,G,wDAvBX,WAAYrB,GAAO,IAAD,8BACd,cAAMA,IAMVkB,UAAY,WACT,EAAKd,SAAS,CACVe,MAAO,EAAKlB,MAAMkB,MAAO,OAP5B,EAAKlB,MAAO,CACRkB,MAAO,GAHG,E,qDAcd,OACE,sBAAKd,UAAU,OAAf,UACE,oBAAGT,MAAM,KAAT,uCAAyCO,KAAKF,MAAMkB,SACpD,wBAAQvB,MAAM,OAAOU,QAASH,KAAKe,UAAnC,wB,GAlBWpB,cCsBRwB,G,6KAZX,OACE,sBAAKjB,UAAU,MAAf,UACA,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,W,GARaP,cCEJyB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.f907ea20.chunk.js","sourcesContent":["import React, {Component} from \"react\";\r\nimport './Header.css';\r\nclass Header extends Component{\r\n  \r\n    \r\n    render(){\r\n        return(\r\n            <div class=\"header\">\r\n            <h2><a href=\"#default\">This is a multiple counter.</a></h2>\r\n            </div>\r\n        );\r\n      }\r\n\r\n}\r\n\r\nexport default Header;","import React, {Component} from \"react\";\r\nimport './Counter.css';\r\nclass Counter extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            counter : 0\r\n        }\r\n    };\r\n\r\n    OnIncrement () {\r\n        this.setState({\r\n            counter : this.state.counter + 1\r\n        })\r\n    }\r\n\r\n    OnDecrement () {\r\n        this.setState({\r\n            counter : this.state.counter - 1\r\n        })\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div className=\"counter-box\">\r\n                <h1>{this.state.counter}</h1>\r\n                <button class=\"btn0\"onClick={this.OnIncrement.bind(this)}>+</button>\r\n                <button class=\"btn0\"onClick={this.OnDecrement.bind(this)}>-</button>\r\n            </div>\r\n        );\r\n\r\n    }\r\n}\r\nexport default Counter;","import React, {Component} from \"react\";\r\nimport Counter from './Counter';\r\nimport './AddCounter.css';\r\n\r\n\r\nclass AddCounter extends Component{\r\n   \r\n constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isClicked: false,\r\n            counterAmount: 0\r\n        };\r\n    }\r\n\r\n    CreateCounter(){\r\n        this.setState({\r\n            isClicked: true,\r\n            counterAmount: this.state.counterAmount + 1\r\n        });\r\n    }\r\n    render(){\r\n        const CounterArr = [];\r\n\r\n        for (var i = 0; i < this.state.counterAmount; i += 1) {\r\n            CounterArr.push(<Counter key={i}/>);\r\n        };\r\n\r\n        return(\r\n            <div className=\"addcounter\">\r\n                <center>\r\n                    <button class=\"btn4\"onClick={this.CreateCounter.bind(this)} > Add Counter </button>\r\n                </center>\r\n                <center>\r\n                    {CounterArr}\r\n                </center>\r\n                \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n  \r\n\r\nexport default AddCounter;","import React, {Component} from \"react\";\r\nimport './Counter1.css';\r\nclass Counter1 extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state ={\r\n            count: 0\r\n        };\r\n    }\r\n\r\n    increment = () => {\r\n       this.setState({\r\n           count: this.state.count + 1\r\n       });\r\n    };\r\n    \r\n    render(){\r\n        return(\r\n          <div className=\"App1\">\r\n            <p class=\"p1\">this is our current count:{this.state.count}</p>\r\n            <button class=\"btn1\" onClick={this.increment}>Run</button>\r\n          </div>\r\n        );\r\n      }\r\n\r\n}\r\nexport default Counter1;","import React, {Component} from \"react\";\r\nimport './Counter2.css';\r\nclass Counter2 extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state ={\r\n            count: 0\r\n        };\r\n    }\r\n\r\n    increment = () => {\r\n       this.setState({\r\n           count: this.state.count + 3\r\n       });\r\n    };\r\n    render(){\r\n        return(\r\n          <div className=\"App2\">\r\n            <p class=\"p2\">this is our current count:{this.state.count}</p>\r\n            <button class=\"btn2\" onClick={this.increment}>Run</button>\r\n          </div>\r\n        );\r\n      }\r\n\r\n}\r\nexport default Counter2;","import React, {Component} from \"react\";\r\nimport './Counter3.css';\r\nclass Counter3 extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state ={\r\n            count: 0\r\n        };\r\n    }\r\n\r\n    increment = () => {\r\n       this.setState({\r\n           count: this.state.count -2.6\r\n       });\r\n    };\r\n\r\n    render(){\r\n        return(\r\n          <div className=\"App3\">\r\n            <p class=\"p3\">this is our current count:{this.state.count}</p>\r\n            <button class=\"btn3\" onClick={this.increment}>Run</button>\r\n          </div>\r\n        );\r\n      }\r\n\r\n}\r\nexport default Counter3;","import React, {Component} from \"react\";\nimport Header from \"./Header\";\nimport AddCounter from \"./AddCounter\";\nimport Counter1 from \"./Counter1\";\nimport Counter2 from \"./Counter2\";\nimport Counter3 from \"./Counter3\";\nimport './App.css';\n\n\n\nclass  App extends Component{\n  render(){\n    return(\n      <div className=\"App\">\n      <Header />\n      <AddCounter/>\n      <Counter1 />\n      <Counter2 />\n      <Counter3 />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}